<?php
/**
 * crpCalendar
 *
 * @copyright (c) 2007, Daniele Conca
 * @link http://noc.postnuke.com/projects/crpcalendar Support and documentation
 * @version 0.2.0
 * @author Daniele Conca <jami at cremonapalloza dot org>
 * @license GNU/GPL - http://www.gnu.org/copyleft/gpl.html
 * @package crpCalendar
 */

/**
 * initialise block
 *
 */
function crpCalendar_categoryeventsblock_init()
{
  // Security
  pnSecAddSchema('Categoryeventsblock::', 'Block title::');
}

/**
 * get information on block
 * 
 */
function crpCalendar_categoryeventsblock_info()
{
  return array('text_type'       => 'crpEvents',
               'module'          => 'crpCalendar',
               'text_type_long'  => 'Category\'s events',
               'allow_multiple'  => true,
               'form_content'    => false,
               'form_refresh'    => false,
               'show_preview'    => true);
}

/**
 * display block
 *
 * @param        array       $blockinfo     a blockinfo structure
 * @return       output      the rendered bock
 */
function crpCalendar_categoryeventsblock_display($blockinfo)
{
  // security check
  if (!SecurityUtil::checkPermission( 'Categoryeventsblock::', "$blockinfo[title]::", ACCESS_READ))
    return;
  	
	if(!pnModAvailable('crpCalendar'))
		return;  
  
  // get the current language
  $currentlang = pnUserGetLang();

  // Break out options from our content field
  $vars = pnBlockVarsFromContent($blockinfo['content']);

  if (!isset($vars['limit']))
    $vars['limit'] = 10;
  
  if (!isset($vars['numitems']))
    $vars['numitems'] = 10;
    
  $apiargs['interval'] = $vars['limit'];
  $apiargs['startnum'] = 1;
  $apiargs['category'] = $vars['events_category'];
  $apiargs['active'] = 'A';
  $apiargs['modvars']['itemsperpage'] = $vars['numitems'];
  $apiargs['sortOrder'] = 'ASC';

  // call the api
  $items = pnModAPIFunc('crpCalendar', 'user', 'getall', $apiargs);

  // check for an empty return
  if (empty($items))
    return;
  
  // create the output object
  $pnRender = pnRender::getInstance('crpCalendar',false);
		
  $pnRender->assign('events', $items);

  $blockinfo['content'] = $pnRender->fetch('blocks/crpcalendar_block_events.htm');
  return pnBlockThemeBlock($blockinfo);
}

/**
 * modify block settings
 *
 * @param        array       $blockinfo     a blockinfo structure
 * @return       output      the bock form
 */
function crpCalendar_categoryeventsblock_modify($blockinfo)
{
  // Break out options from our content field
  $vars = pnBlockVarsFromContent($blockinfo['content']);

  // Defaults
  if (empty($vars['limit']))
    $vars['limit'] = 10;
    
  if (!isset($vars['numitems']))
      $vars['numitems'] = 10;
    
  // load the category registry util
	if (!($class = Loader::loadClass('CategoryRegistryUtil')))
		pn_exit('Unable to load class [CategoryRegistryUtil] ...');
	
	$mainCat = CategoryRegistryUtil :: getRegisteredModuleCategory('crpCalendar', 'crpcalendar', 'Main', '/__SYSTEM__/Modules/crpCalendar');
	

  // Create output object
  $pnRender = pnRender::getInstance('crpCalendar', false);

  // assign the block vars
  $pnRender->assign($vars);
  $pnRender->assign ('mainCategory', $mainCat);

  // Return the output that has been generated by this function
  return $pnRender->fetch('blocks/crpcalendar_block_categoryevents_modify.htm');

}

/**
 * update block settings
 *
 * @param        array       $blockinfo     a blockinfo structure
 * @return       $blockinfo  the modified blockinfo structure
 */
function crpCalendar_categoryeventsblock_update($blockinfo)
{
  // Get current content
  $vars = pnBlockVarsFromContent($blockinfo['content']);

  // alter the corresponding variable
  $vars['limit']       = (int)FormUtil::getPassedValue('limit', null, 'POST');
  $vars['numitems']    = (int)FormUtil::getPassedValue('numitems', null, 'POST');
 	$vars['events_category'] = FormUtil :: getPassedValue('events_category', null);

  // write back the new contents
  $blockinfo['content'] = pnBlockVarsToContent($vars);

  // clear the block cache
  $pnRender = pnRender::getInstance('crpCalendar');
  $pnRender->clear_cache('blocks/crpcalendar_block_events.htm');

  return $blockinfo;
}

?>